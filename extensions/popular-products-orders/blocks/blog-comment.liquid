{{ 'section-product-comment.css' | asset_url | stylesheet_tag }}
{{ 'section-blog-comments.css' | asset_url | stylesheet_tag }}

<div id="section-{{ section.id }}" class="product-comment padding-sider blog-comment">
  <input id="blogId" name="blogId" value="{{ blog.id }}" style="display: none;">
  <input id="customerName" name="name" value="{%- if customer.name != blank -%}{{ customer.name }}{% else %}Anonymous{%- endif -%}" style="display: none;">

  <div id="comments-modal">
    <div class="comments-modal-content">
      <form id="comment-form">
        <div>
          <label for="comment">Comment*</label>
          <textarea id="comment" name="comment" required rows="5"></textarea>
        </div>

        <div>
          <label for="image">Images*</label>
          <div class="comment-images-list">
            <div class="comment-images-uploadbtn">
              <img src="{{- 'icon-plus.png' | asset_img_url: '36x' -}}" width="36" height="36">
            </div>
          </div>
          <input type="file" id="image-upload" name="images" accept="image/jpeg, image/png, image/gif" style="display: none;">
        </div>

        <button type="submit" id="submit-btn">Submit
          <div id="loading-spinner" style="display: none;">
            <div class="spinner"></div>
          </div>
        </button>

      </form>
    </div>
  </div>

  <div class="product-comment-head">
    <span>Reviews（<span id="comment-count"></span>）</span>
  </div>
  <div id="comments-container">
    <div id="comments-list"></div>
    <div class="comments-pagination">
      <img id="prev-page" src="{{- 'arrow-left.png' | asset_img_url: '32x' -}}" width="32" height="32">
      <div id="page-numbers"></div>
      <img id="next-page" src="{{- 'arrow-right.png' | asset_img_url: '32x' -}}" width="32" height="32">
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
  let pageInfo;

  async function getBlogReviews(page) {
    const blogId = document.getElementById("blogId").value;

    const formData = new FormData();
    formData.append("publish", true);
    formData.append("blogId", blogId);
    formData.append("page", page);

    const response = await fetch("/apps/comment-app/api/getBlogReviews", {
      method: "POST",
      body: formData,
    });

    const result = await response.json();
    if (result.ok) {
      pageInfo = result.page;
      document.getElementById("comment-count").innerHTML = pageInfo.totalReviews;
      if (pageInfo.totalReviews === 0) {
        document.getElementById("comments-container").style.display = "none";
      }else{
        document.getElementById("comments-container").style.display = "block";

        const commentsList = document.getElementById('comments-list');
        commentsList.innerHTML = '';        
        const list = result.data
        list.forEach((comment) => {
          const commentItem = document.createElement('div');
          commentItem.classList.add('comments-item');
          const images = comment.images.split(',').map((image) => `<img src="${image}" alt="Comment image">`).join('');
          commentItem.innerHTML = `<div class="flex-center"><div class="flex-center"><img
                    src="https://cdn.shopify.com/s/files/1/0913/4207/8236/files/logo-head.webp?v=1737878466"
                    alt="logo-head"
                    class="logo-head"
                  ><span>${comment.firstName} ${comment.lastName}</span></div><div class="flex-center comment-images">${images}</div></div><div class="comment-content">${comment.comment}</div>`;

          commentsList.appendChild(commentItem);
        });

        function renderPagination() {
          const pageNumbersContainer = document.getElementById('page-numbers');
          pageNumbersContainer.innerHTML = '';

          for (let i = 1; i <= pageInfo.totalPages; i++) {
            const pageButton = document.createElement('div');
            pageButton.classList.add('page-number-btn');
            pageButton.textContent = i;
            pageButton.addEventListener('click', function () {
              if (i == pageInfo.currentPage) return;

              getBlogReviews(i)
            });
            pageNumbersContainer.appendChild(pageButton);
          }

          updateActivePage();
          updatePaginationControls();
        }

        function updateActivePage() {
          const pageButtons = document.querySelectorAll('#page-numbers .page-number-btn');
          pageButtons.forEach((button, index) => {
            button.classList.remove('active');
            if (index + 1 == pageInfo.currentPage) {
              button.classList.add('active');
            }
          });
        }

        function updatePaginationControls() {
          const prevButton = document.getElementById('prev-page');
          const nextButton = document.getElementById('next-page');

          if (pageInfo.currentPage == 1) {
            prevButton.style.display = 'none';
          } else {
            prevButton.style.display = 'flex';
          }

          if (pageInfo.currentPage == pageInfo.totalPages) {
            nextButton.style.display = 'none';
          } else {
            nextButton.style.display = 'flex';
          }
        }

        function setupPaginationControls() {
          const prevButton = document.getElementById('prev-page');
          const nextButton = document.getElementById('next-page');

          prevButton.addEventListener('click', function () {
            if (pageInfo.currentPage > 1) {
              getBlogReviews(pageInfo.currentPage++)
            }
          });

          nextButton.addEventListener('click', function () {
            if (pageInfo.currentPage < pageInfo.totalPages) {
              getBlogReviews(pageInfo.currentPage++)
            }
          });
        }

        renderPagination();
        setupPaginationControls();
      }
    }
  }

  getBlogReviews(1)

  const fileInput = document.getElementById('image-upload');
  const uploadBtn = document.querySelector('.comment-images-uploadbtn');
  const MAX_FILE_SIZE = 20 * 1024 * 1024;
  const MAX_IMAGES = 3;
  let imgFile = [];
  uploadBtn.addEventListener('click', function () {
    fileInput.click();
  });
  fileInput.addEventListener('change', () => {
    const files = fileInput.files[0];

    if (files.size > MAX_FILE_SIZE) {
      alert(`The file ${files.name} is too large. Please upload a file smaller than 20MB.`);
      return;
    }

    imgFile.push(files);
    displayUploadedImage(files);
  });

  function displayUploadedImage(file) {
    const imgElement = document.createElement("img");
    imgElement.src = URL.createObjectURL(file);

    const deleteIcon = document.createElement('img');
    deleteIcon.classList.add('delete-btn');
    deleteIcon.dataset.fileIndex = imgFile.length - 1;
    deleteIcon.src = "{{- 'icon-close.png' | asset_img_url: '24x' -}}";
    deleteIcon.width = 24;
    deleteIcon.height = 24;
    deleteIcon.addEventListener('click', function (event) {
      deleteImage(event)
    });

    const container = document.createElement("div");
    container.classList.add('comment-images-item');
    container.appendChild(imgElement);
    container.appendChild(deleteIcon);
    document.querySelector(".comment-images-list").appendChild(container);

    toggleUploadButton();
  }

  function toggleUploadButton() {
    if (imgFile.length >= MAX_IMAGES) {
      uploadBtn.style.display = 'none';
    } else {
      uploadBtn.style.display = 'flex';
    }
  }

  function deleteImage(event) {
    const deleteIndex = event.target.dataset.fileIndex;
    imgFile.splice(deleteIndex, 1);
    const imageContainer = event.target.closest('.comment-images-item');
    imageContainer.remove();

    toggleUploadButton();
  }

  document.getElementById("comment-form").addEventListener("submit", async function (e) {
    e.preventDefault();
    document.getElementById("submit-btn").disabled = true;
    document.getElementById("loading-spinner").style.display = "block";

    const name = document.getElementById("customerName").value;
    const comment = document.getElementById("comment").value;
    const blogId = document.getElementById("blogId").value;
    const imageUrls = []

    for (let i = 0; i < imgFile.length; i++) {
      const file = imgFile[i];

      const imageUrl = await uploadImageToShopify(file);

      if (imageUrl) {
        imageUrls.push(imageUrl);
      } else {
        console.error("Image upload failed");
        document.getElementById("submit-btn").disabled = false;
        document.getElementById("loading-spinner").style.display = "none";
        return;
      }
    }

    const formData = new FormData();
    formData.append("comment", comment);
    formData.append("blogId", blogId);
    formData.append("name", name);
    formData.append("images", imageUrls.join(','));

    const response = await fetch("/apps/comment-app/api/createBlogReview", {
      method: "POST",
      body: formData,
    });

    const result = await response.json();
    if (result.ok) {
      document.getElementById('comment-form').reset();
      imgFile = [];
      imageUrl = [];
      document.querySelectorAll('.comment-images-item').forEach(function(element) {
          element.remove();
      });
      getBlogReviews(pageInfo.currentPage)
    } else {
      console.error("Failed to submit comment:", result.message);
    }

    document.getElementById("submit-btn").disabled = false;
    document.getElementById("loading-spinner").style.display = "none";
  });

  async function uploadImageToShopify(imageFile) {
    const formData = new FormData();
    formData.append("file", imageFile);

    try {
      const response = await fetch("/apps/comment-app/api/fileCreate", {
        method: "POST",
        body: formData,
      });

      if (!response.ok) {
        throw new Error("Image upload failed");
      }
      const result = await response.json();
      return result.data.url;
    } catch (error) {
      console.error(error);
      return null;
    }
  }
});
</script>

{% schema %}
{
  "name": "blog-comment-ext",
  "target": "section",
  "settings": []
}
{% endschema %}
